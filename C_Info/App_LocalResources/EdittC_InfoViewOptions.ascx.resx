<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NormalInfomation.Text" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="plRows.Text" xml:space="preserve">
    <value>Show Rows</value>
  </data>
  <data name="plRows.Help" xml:space="preserve">
    <value>Show Rows</value>
  </data>
  <data name="plColumns.Text" xml:space="preserve">
    <value>Show Columns</value>
  </data>
  <data name="plColumns.Help" xml:space="preserve">
    <value>Show Columns</value>
  </data>
  <data name="plMoreRows.Text" xml:space="preserve">
    <value>More Rows</value>
  </data>
  <data name="plMoreRows.Help" xml:space="preserve">
    <value>More Show Rows</value>
  </data>
  <data name="plMoreColumns.Text" xml:space="preserve">
    <value>More Columns</value>
  </data>
  <data name="plMoreColumns.Help" xml:space="preserve">
    <value>More Columns</value>
  </data>
  <data name="plTitleCount.Text" xml:space="preserve">
    <value>Title Show Count</value>
  </data>
  <data name="plTitleCount.Help" xml:space="preserve">
    <value>Title Show Count</value>
  </data>
  <data name="plInfoTarget.Text" xml:space="preserve">
    <value>Target</value>
  </data>
  <data name="plInfoTarget.help" xml:space="preserve">
    <value>Link Target</value>
  </data>
  <data name="_Blank.Text" xml:space="preserve">
    <value>New Window</value>
  </data>
  <data name="_Self.Text" xml:space="preserve">
    <value>Current Page</value>
  </data>
  <data name="Disable.Text" xml:space="preserve">
    <value>Disable Link</value>
  </data>
  <data name="plSort.Text" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="plSort.Help" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="SortDesc.Text" xml:space="preserve">
    <value>Sort by SortDate</value>
  </data>
  <data name="CreateDateDesc.Text" xml:space="preserve">
    <value>Sort by CreateDate</value>
  </data>
  <data name="SortAsc.Text" xml:space="preserve">
    <value>Sort by SortDate Ascending</value>
  </data>
  <data name="CreateDateAsc.Text" xml:space="preserve">
    <value>Sort by CreateDate Ascending</value>
  </data>
  <data name="plTimeFormat.Text" xml:space="preserve">
    <value>TimeFormat</value>
  </data>
  <data name="plTimeFormat.Help" xml:space="preserve">
    <value>TimeFormat</value>
  </data>
  <data name="PleaseSelect.Text" xml:space="preserve">
    <value>--Please Select--</value>
  </data>
  <data name="UserDefine.Text" xml:space="preserve">
    <value>User Define</value>
  </data>
  <data name="TimeFormat.Text" xml:space="preserve">
    <value>yyyy-MM-dd hh:mm</value>
  </data>
  <data name="plShowType.Text" xml:space="preserve">
    <value>Show Type</value>
  </data>
  <data name="plShowType.Help" xml:space="preserve">
    <value>Show Type</value>
  </data>
  <data name="More.Text" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Pager.Text" xml:space="preserve">
    <value>Pager</value>
  </data>
  <data name="ShowTitleAlter.Text" xml:space="preserve">
    <value>Show Title ToolTip</value>
  </data>
  <data name="plImgAlign.Text" xml:space="preserve">
    <value>Image Position</value>
  </data>
  <data name="plImgAlign.Help" xml:space="preserve">
    <value>Image Position</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Left.Text" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="Right.Text" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="Top.Text" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="Bottom.Text" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="plLogoURL.Text" xml:space="preserve">
    <value>ICON</value>
  </data>
  <data name="plLogoURL.Help" xml:space="preserve">
    <value>ICON of module</value>
  </data>
  <data name="plShowMode.Text" xml:space="preserve">
    <value>Show Mode</value>
  </data>
  <data name="plImageInfoRows.Text" xml:space="preserve">
    <value>Image Article Count</value>
  </data>
  <data name="plImageInfoRows.Help" xml:space="preserve">
    <value>Image Article Count</value>
  </data>
  <data name="plShowMode.Help" xml:space="preserve">
    <value>Show Mode! </value>
  </data>
  <data name="plWorkFlow.Text" xml:space="preserve">
    <value>WorkFolow</value>
  </data>
  <data name="plWorkFlow.Help" xml:space="preserve">
    <value>Modules's WorkFlow</value>
  </data>
  <data name="plPassStatus.Text" xml:space="preserve">
    <value>After Audit</value>
  </data>
  <data name="plPassStatus.Help" xml:space="preserve">
    <value>the handle of after audit</value>
  </data>
  <data name="CanModify.Text" xml:space="preserve">
    <value>Can Modify</value>
  </data>
  <data name="AdminCanModify.Text" xml:space="preserve">
    <value>Can modify by Adminstrators</value>
  </data>
  <data name="Archives.Text" xml:space="preserve">
    <value>Pigeonhole</value>
  </data>
  <data name="plRemarkType.Text" xml:space="preserve">
    <value>Remark Type</value>
  </data>
  <data name="plRemarkType.Help" xml:space="preserve">
    <value>Select the remark type for this module's articles</value>
  </data>
  <data name="DisableRemark.Text" xml:space="preserve">
    <value>Disable Remark</value>
  </data>
  <data name="AnonymousRemark.Text" xml:space="preserve">
    <value>Anonymous Remark</value>
  </data>
  <data name="UserRemark.Text" xml:space="preserve">
    <value>Register User Remark</value>
  </data>
  <data name="SignIn.Text" xml:space="preserve">
    <value>Need Sign In</value>
  </data>
  <data name="plRss.Text" xml:space="preserve">
    <value>Rss</value>
  </data>
  <data name="plRss.Help" xml:space="preserve">
    <value>Rss</value>
  </data>
  <data name="SkinSetup.Text" xml:space="preserve">
    <value>Skin</value>
  </data>
  <data name="plDeplayTabs.Text" xml:space="preserve">
    <value>Also Update Module</value>
  </data>
  <data name="plDeplayTabs.Help" xml:space="preserve">
    <value>Modules will be updated when this module is updated, format is "TabId:ModuleId"</value>
  </data>
  <data name="plTabID.Text" xml:space="preserve">
    <value>Detail Page</value>
  </data>
  <data name="plTabID.Help" xml:space="preserve">
    <value>Detail Page</value>
  </data>
  <data name="plTabSkin.Text" xml:space="preserve">
    <value>Tab Skin</value>
  </data>
  <data name="plTabSkin.Help" xml:space="preserve">
    <value>Tab Skin</value>
  </data>
  <data name="plDetailSkin.Text" xml:space="preserve">
    <value>Detail Skin</value>
  </data>
  <data name="plDetailSkin.Help" xml:space="preserve">
    <value>Detail Skin</value>
  </data>
  <data name="plDocStandard.Text" xml:space="preserve">
    <value>Detail Document Standard</value>
  </data>
  <data name="plDocStandard.Help" xml:space="preserve">
    <value>Please specify the detail document standard</value>
  </data>
  <data name="NoStandard.Text" xml:space="preserve">
    <value>No Standard</value>
  </data>
  <data name="CNGOV.Text" xml:space="preserve">
    <value>CNGOV</value>
  </data>
  <data name="plMoreSkin.Text" xml:space="preserve">
    <value>More Skin</value>
  </data>
  <data name="plMoreSkin.Help" xml:space="preserve">
    <value>More Skin</value>
  </data>
  <data name="plMoreTabSkin.Text" xml:space="preserve">
    <value>More Tab Skin</value>
  </data>
  <data name="plMoreTabSkin.Help" xml:space="preserve">
    <value>More Tab Skin</value>
  </data>
  <data name="plEditorDefineStyle.Text" xml:space="preserve">
    <value>Summary Skin</value>
  </data>
  <data name="plEditorDefineStyle.Help" xml:space="preserve">
    <value>Summary Skin</value>
  </data>
  <data name="plEditorModuleStyle.Text" xml:space="preserve">
    <value>Module Skin</value>
  </data>
  <data name="plEditorModuleStyle.Help" xml:space="preserve">
    <value>Module Skin</value>
  </data>
  <data name="OtherSetup.Text" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="IsDirectPublish.Text" xml:space="preserve">
    <value>Public Directly</value>
  </data>
  <data name="IsShowNewIcon.Text" xml:space="preserve">
    <value>Show New ICON</value>
  </data>
  <data name="plNewDayCount.Text" xml:space="preserve">
    <value>Top days of Show New ICON </value>
  </data>
  <data name="plNewDayCount.Help" xml:space="preserve">
    <value>Top days of Show New ICON </value>
  </data>
  <data name="plNewURL.Text" xml:space="preserve">
    <value>New ICON</value>
  </data>
  <data name="plNewURL.Help" xml:space="preserve">
    <value>New ICON</value>
  </data>
  <data name="plTitleLeftHTML.Text" xml:space="preserve">
    <value>Title Left HTML</value>
  </data>
  <data name="plTitleLeftHTML.Help" xml:space="preserve">
    <value>Title Left HTML</value>
  </data>
  <data name="plTitleRightHTML.Text" xml:space="preserve">
    <value>Titile Right HTML</value>
  </data>
  <data name="plTitleRightHTML.Help" xml:space="preserve">
    <value>Titile Right HTML</value>
  </data>
  <data name="plMoreStyle.Text" xml:space="preserve">
    <value>More Style</value>
  </data>
  <data name="plMoreStyle.Help" xml:space="preserve">
    <value>More Style</value>
  </data>
  <data name="plMoreURL.Text" xml:space="preserve">
    <value>More ICON</value>
  </data>
  <data name="plMoreURL.Help" xml:space="preserve">
    <value>More ICON</value>
  </data>
  <data name="plMoreModules.Text" xml:space="preserve">
    <value>Show Modules At More List</value>
  </data>
  <data name="plMoreModules.Help" xml:space="preserve">
    <value>Show Modules At More List</value>
  </data>
  <data name="Update.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="plExceHtml.Text" xml:space="preserve">
    <value>Exceed Title Count RightHtml</value>
  </data>
  <data name="plExceHtml.Help" xml:space="preserve">
    <value>Exceed Title Count RightHtml</value>
  </data>
  <data name="plMoreTabID.Text" xml:space="preserve">
    <value>More List Tab</value>
  </data>
  <data name="plMoreTabID.Help" xml:space="preserve">
    <value>More List Tab</value>
  </data>
  <data name="Image.Text" xml:space="preserve">
    <value>Image Settings</value>
  </data>
  <data name="plImageWidth.Text" xml:space="preserve">
    <value>Image Width</value>
  </data>
  <data name="plImageHeight.Text" xml:space="preserve">
    <value>Image Height</value>
  </data>
  <data name="plWaterMark.Text" xml:space="preserve">
    <value>Water Mark</value>
  </data>
  <data name="plNeedPublisherAudit.Text" xml:space="preserve">
    <value>Need Publisher Audit</value>
  </data>
  <data name="plManageRole.Text" xml:space="preserve">
    <value>System Manage Role</value>
  </data>
  <data name="AdminRole.Text" xml:space="preserve">
    <value>Administrator Role</value>
  </data>
  <data name="EditRole.Text" xml:space="preserve">
    <value>Edit Role</value>
  </data>
  <data name="plOnlyCreatorEdit.Text" xml:space="preserve">
    <value>Only creator can edit</value>
  </data>
  <data name="plOnlyCreatorEdit.Help" xml:space="preserve">
    <value>Only creator and super user can edit</value>
  </data>
  <data name="plAllowSingleRight.Text" xml:space="preserve">
    <value>Single item right managed</value>
  </data>
  <data name="plAllowSingleRight.Help" xml:space="preserve">
    <value>Allow you can manage one item's view right</value>
  </data>
  <data name="plImageShowType.Text" xml:space="preserve">
    <value>Image in Title Show Type</value>
  </data>
  <data name="plImageShowType.Help" xml:space="preserve">
    <value>In which type the image in title while showed</value>
  </data>
  <data name="OriginalImage.Text" xml:space="preserve">
    <value>Original Image</value>
  </data>
  <data name="AlternateImage.Text" xml:space="preserve">
    <value>Alternate Image</value>
  </data>
  <data name="AlternateText.Text" xml:space="preserve">
    <value>Alternate Text</value>
  </data>
  <data name="plAlternateImageURL.Text" xml:space="preserve">
    <value>Alternate Image URL</value>
  </data>
  <data name="plAlternateImageURL.Help" xml:space="preserve">
    <value>The alternate image's URL</value>
  </data>
  <data name="plAlternateText.Text" xml:space="preserve">
    <value>Alternate Text</value>
  </data>
  <data name="plAlternateText.Help" xml:space="preserve">
    <value>The alternate text</value>
  </data>
  <data name="AllowFlowStepChoice.Text" xml:space="preserve">
    <value>Allow approvers to choose step</value>
  </data>
  <data name="plDescriptionCount.Text" xml:space="preserve">
    <value>Description Show Count</value>
  </data>
  <data name="plDescriptionCount.Help" xml:space="preserve">
    <value>Show charactar count of description</value>
  </data>
  <data name="plContainerCssClass.Text" xml:space="preserve">
    <value>Container's CSS Class</value>
  </data>
  <data name="plContainerCssClass.Help" xml:space="preserve">
    <value>CSS class for list container, e.g. the table and ul.</value>
  </data>
  <data name="plItemCssClass.Text" xml:space="preserve">
    <value>Item Css Class</value>
  </data>
  <data name="plItemCssClass.Help" xml:space="preserve">
    <value>Alternating Item Css Class</value>
  </data>
  <data name="plAlterItemCssClass.Text" xml:space="preserve">
    <value>Alternating Item Css Class</value>
  </data>
  <data name="plBeDetailStyleModule.Help" xml:space="preserve">
    <value>If checked, this module will be detail style module instead of info's original module</value>
  </data>
  <data name="plBeDetailStyleModule.Text" xml:space="preserve">
    <value>Should Be Detail Style Module?</value>
  </data>
  <data name="plSplitor.Text" xml:space="preserve">
    <value>List Splitor</value>
  </data>
  <data name="plSplitor.Help" xml:space="preserve">
    <value>List splitor is used to split list items</value>
  </data>
  <data name="ShowShortTitle.Text" xml:space="preserve">
    <value>Show Short Title</value>
  </data>
  <data name="plIsCInfoShareModule.Text" xml:space="preserve">
    <value>Is Server Shared Module?</value>
  </data>
  <data name="plIsCInfoShareModule.Help" xml:space="preserve">
    <value>Whether this module is a server-shared module. If it is, we will see it cross servers.</value>
  </data>
  <data name="plCInfoDefaultShareModule.Text" xml:space="preserve">
    <value>Default Shared Modules</value>
  </data>
  <data name="plCInfoDefaultShareModule.Help" xml:space="preserve">
    <value>Specify the default auto-synchronized modules for other servers, these modules have the same articles by default according to this module.</value>
  </data>
  <data name="AutoSummary.Text" xml:space="preserve">
    <value>Auto Summary</value>
  </data>
  <data name="ApproveStatusAsc.Text" xml:space="preserve">
    <value>Approve Status Asc</value>
  </data>
  <data name="AuthorAsc.Text" xml:space="preserve">
    <value>Author Asc</value>
  </data>
  <data name="AuthorDesc.Text" xml:space="preserve">
    <value>Author Desc</value>
  </data>
  <data name="TitleAsc.Text" xml:space="preserve">
    <value>Title Asc</value>
  </data>
  <data name="TitleDesc.Text" xml:space="preserve">
    <value>Title Desc</value>
  </data>
  <data name="plHotCount.Help" xml:space="preserve">
    <value>Which number will an article's hit is greater than and specified 'hot'.</value>
  </data>
  <data name="plHotCount.Text" xml:space="preserve">
    <value>Hot Specific Number</value>
  </data>
  <data name="plHotURL.Help" xml:space="preserve">
    <value>Which image file will instead of [HOT] label when an article's hit is greater than a specific number.</value>
  </data>
  <data name="plHotURL.Text" xml:space="preserve">
    <value>[HOT] Image Url</value>
  </data>
  <data name="plRecommendURL.Help" xml:space="preserve">
    <value>Which image file will instead of [RECOMMEND] label when an article is set sort top.</value>
  </data>
  <data name="plRecommendURL.Text" xml:space="preserve">
    <value>[RECOMMEND] Image Url</value>
  </data>
  <data name="plTopURL.Help" xml:space="preserve">
    <value>Which image file will instead of [TOP] label when an article is set sort top.</value>
  </data>
  <data name="plTopURL.Text" xml:space="preserve">
    <value>[TOP] Image Url</value>
  </data>
</root>